#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

RESOLV_CONF="/etc/resolv.conf"
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

case "$1" in
	deconfig)
		if grep -q -v ip= /proc/cmdline; then
			ip addr flush dev $interface
			ip link set dev $interface up
		fi

		if grep -q -v nfsroot= /proc/cmdline; then
			ip addr flush dev $interface
			ip link set dev $interface up
		fi

		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -k $interface
		fi
		;;

	leasefail|nak)
		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -wD $interface --no-chroot
		fi
		;;

	renew|bound)
		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -k $interface
		fi
		ip addr add dev $interface local $ip/$mask $BROADCAST

		if [ -n "$router" ] ; then
			echo "deleting routers"
			while ip route del 169.254.0.0/16 dev $interface 2>/dev/null ; do
				:
			done
			while ip route del default dev $interface 2>/dev/null ; do
				:
			done

			for i in $router ; do
				echo "adding router $i"
				ip route add default via $i dev $interface metric $((metric++))
			done
			ip route add 169.254.0.0/16 dev $interface metric $((metric++))
		fi

		echo -n > $RESOLV_CONF
		[ -n "$domain" ] && echo search $domain >> $RESOLV_CONF
		for i in $dns ; do
			echo adding dns $i
			echo nameserver $i >> $RESOLV_CONF
		done
		;;
esac

exit 0
